; https://tox.readthedocs.org

[tox]
; note: lint is not default because it should be installed as pre-commit hook
envlist = test

[testenv]
; pass only env CI vars through - extend on a per-need base
; use tox --showconfig to see which env vars are being passed through
# passenv = bamboo_*
basepython = python{{ cookiecutter.python_version }}
# TODO adjust for your organisation
#  adjust -i parameter to your internal packaging host
install_command =
    pip install \
    {opts} {packages}
whitelist_externals =
    echo
    rm

[testenv:dev]
description = create a development environment at {envdir}
usedevelop = True
extras = test
commands =
    echo created dev env at {envdir}
    echo activate with: source {envdir}/bin/activate

[testenv:lint]
; https://pre-commit.com/
description = fix automatically what we can and complain about the rest
deps = pre-commit
skip_install = True
commands =
    pre-commit run --all-files --show-diff-on-failure
    echo install hook locally:
    echo {envdir}/bin/pre-commit install

[testenv:test]
description = run the tests for this project
extras = test
commands =
    pytest \
        --durations=10 \
        --cov={{cookiecutter.importable_name}} \
        --cov-config="{toxinidir}/tox.ini" \
        --cov="{envsitepackagesdir}/{{cookiecutter.importable_name}}" \
        --cov-report=term-missing \
        ;bamboo JUnit Parser needs subfolder - use pattern: **/.tox/junit/*.xml
        --junitxml={toxworkdir}/junit/pytest.xml \
        {posargs:tests}

[docs]
deps =
    recommonmark
    sphinx
    sphinx-rtd-theme

[testenv:docs-dev]
description = auto rebuild docs and serve locally
deps =
    {[docs]deps}
    sphinx-autobuild
commands =
    rm -rf {toxinidir}/docs/html
    # --ignore  *___jb_* avoids rebuild loops if using a JetBrains IDE
    sphinx-autobuild -W -b html {toxinidir}/docs {toxinidir}/docs/html \
        --ignore *___jb_*

[testenv:docs-publish]
description = build and push the HTML to the docs branch
deps =
    {[docs]deps}
    ; TODO adjust for your organisation
    ; this is one of our internal tools which is specific to our setup
    ; you need to replace this with your own implementation
    ; take a leaf e.g. out of how Lektor or mkdocs do this
    some-adequate-pages-publisher-package

commands =
    - rm -rf {toxinidir}/docs/html
    sphinx-build -b html {toxinidir}/docs {toxinidir}/docs/html \
        -W --keep-going
    some-adequate-pages-publisher-package {posargs:--push}

[testenv:pip-check-reqs]
# https://pypi.org/project/pip_check_reqs/
deps=
    -rrequirements.txt
    pip-check-reqs
commands=
    pip-missing-reqs {{cookiecutter.importable_name}}
    pip-extra-reqs {{cookiecutter.importable_name}}

##################### Configurations of third party tools #####################

[isort]
; https://github.com/timothycrosley/isort
; if you experience problems mark the import with # isort:skip
; This ordering is the default here for informational reasons
; this can be customized if it makes sense in the project
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
combine_as_imports = True
line_length = 88
; automatically populated by seed-isort-config
known_third_party =

[flake8]
; sometimes black needs an extra character when formatting
max_line_length = 89
ignore = W504, W503, E203, D202

[pytest]
; https://pytest.org
addopts = --showlocals
log_cli = true
log_level = NOTSET

[coverage:run]
; TODO adjust for your organisation
omit =
    ; make sure that coverage only picks up the code from site-packages
    {{cookiecutter.importable_name}}

; see https://coverage.readthedocs.io/

[coverage:report]
; regular expressions for lines to exclude from consideration
exclude_lines =
	; Have to re-enable the standard pragma
    pragma: no cover
	# Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
; ignore source code that canâ€™t be found, emitting a warning instead of an exception.
; ignore_errors = True

[pydocstyle]
match_dir = '^(?:(?!tests$|conda-env-.*$|\.).*)$'
ignore = D213, D202, D203, D413
# D203: 1 blank line required before class docstring (found 0)
# D213: Multi-line docstring summary should start at the second line
# D202: No blank lines allowed after function docstring
# D414: Missing blank line after last section
